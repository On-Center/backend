name: "OpenAPI: Generate NestJS stubs, docs & mock"

on:
  push:
    branches: [ main ]
    paths:
      - 'openapi/**'

permissions:
  contents: write
  pages: write        # for Pages deploy
  id-token: write     # for Pages OIDC auth

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  generate-stubs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (LTS)
        uses: actions/setup-node@v5
        with:
          node-version: 'lts/*'
          check-latest: true

      - name: Setup Java (latest LTS)
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21
          check-latest: true

      - name: Install CLI tools
        run: |
          npm install -g @apidevtools/swagger-cli
          npm install -g @openapitools/openapi-generator-cli
          npm install -g @redocly/cli   # Redocly CLI

      - name: Bundle OpenAPI files
        run: swagger-cli bundle ./openapi/openapi.yml --outfile ./openapi/_bundled.yml --type yaml

      # --- Optional: inject mock server URL into the bundled spec so Redoc "Try it" uses it ---
      - name: Inject mock server URL into bundled spec (optional)
        if: ${{ env.FLY_APP_NAME != '' }}
        env:
          FLY_APP_NAME: ${{ vars.FLY_APP_NAME }}
        run: |
          python -m pip install --user pyyaml
          python - <<'PY'
          import os, yaml
          path = './openapi/_bundled.yml'
          with open(path) as f:
              doc = yaml.safe_load(f)
          servers = doc.get('servers', []) or []
          url = f"https://{os.environ['FLY_APP_NAME']}.fly.dev"
          if not any(s.get('url') == url for s in servers):
              servers.append({'url': url, 'description': 'Public mock (Prism on Fly.io)'})
          doc['servers'] = servers
          with open(path, 'w') as f:
              yaml.safe_dump(doc, f, sort_keys=False)
          PY

      - name: Clean stubs folder
        run: |
          rm -rf ./stubs
          mkdir -p ./stubs

      - name: Generate NestJS server stubs
        run: |
          openapi-generator generate \
            -g typescript-nestjs \
            -i ./openapi/_bundled.yml \
            -o ./stubs \
            --additional-properties="disallowAdditionalPropertiesIfNotPresent=false,\
                                      legacyDiscriminatorBehavior=false,\
                                      stringEnums=true,\
                                      enumUnknownDefaultCase=true,\
                                      fileNaming=kebab-case,\
                                      useSingleRequestParameter=true,\
                                      supportsES6=true,\
                                      nullSafeAdditionalProps=true,\
                                      taggedUnions=true,\
                                      nestVersion=8.0.0,\
                                      licenseName=MIT"

      # --- Build docs for GitHub Pages ---
      - name: Build OpenAPI docs (Redocly -> static HTML)
        run: |
          mkdir -p ./public
          redocly build-docs ./openapi/_bundled.yml --output ./public/index.html
          # optional: let users download the spec
          cp ./openapi/_bundled.yml ./public/openapi.yaml

      # Keep a copy of the bundle as an artifact for the mock deploy job
      - name: Upload OpenAPI bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-bundle
          path: ./openapi/_bundled.yml

      - name: Remove bundled OpenAPI file (temporary)
        run: rm -f ./openapi/_bundled.yml

      - name: Commit & push changes (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(stubs): regenerate NestJS server stubs from OpenAPI"
            git pull --rebase origin main
            git push origin HEAD:main
          fi

      # Upload the built docs for the deploy job
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: generate-stubs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # --- New: Deploy a public mock server (Prism) to Fly.io ---
  deploy-mock:
    needs: generate-stubs
    runs-on: ubuntu-latest
    env:
      FLY_APP_NAME: ${{ vars.FLY_APP_NAME }}
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download bundled OpenAPI
        uses: actions/download-artifact@v4
        with:
          name: openapi-bundle
          path: mock

      - name: Prepare mock build context
        run: |
          ls -la mock
          mv mock/_bundled.yml mock/openapi.yml

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1

      - name: Create fly.toml
        run: |
          cat > mock/fly.toml <<EOF
          app = "${FLY_APP_NAME}"
          primary_region = "ams"

          [http_service]
            internal_port = 8080
            force_https = true
            auto_stop_machines = "suspend"
            auto_start_machines = true
            min_machines_running = 1
          EOF

      - name: Ensure app exists
        run: |
          flyctl apps create "${FLY_APP_NAME}" || echo "App may already exist."

      - name: Deploy Prism mock
        working-directory: mock
        run: |
          flyctl deploy --remote-only --app "${FLY_APP_NAME}" --dockerfile ./Dockerfile

      - name: Mock URL
        run: echo "Mock is live at https://${FLY_APP_NAME}.fly.dev"
